align.preset = more
align.stripMargin = true
assumeStandardLibraryStripMargin = true
danglingParentheses.exclude = [def]
indent.defnSite = 4
indentOperator.preset = "spray"
literals.long=Upper
maxColumn=80
newlines.afterCurlyLambdaParams = squash
newlines.beforeCurlyLambdaParams = multilineWithCaseOnly
newlines.implicitParamListModifierForce = [after]
rewrite.redundantBraces.stringInterpolation = true
rewrite.rules = [RedundantBraces, RedundantParens, SortImports, Imports]
rewrite.scala3.convertToNewSyntax = true
rewrite.scala3.removeOptionalBraces = false
runner.dialect = scala3
spaces.inImportCurlyBraces = true
style=defaultWithAlign
version=3.7.15
verticalMultiline.arityThreshold = 6
verticalMultiline.atDefnSite = true
verticalMultiline.newlineAfterOpenParen = false
literals.long = Upper
literals.float = Upper
literals.hexPrefix = Lower
literals.hexDigits = Upper
literals.scientific = Lower
binPack.literalArgumentLists = true
binPack.parentConstructors = Oneline
includeCurlyBraceInSelectChains = true
includeNoParensInSelectChains = true
optIn.breakChainOnFirstMethodDot = true
optIn.breaksInsideChains = false
optIn.encloseClassicChains = true
rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}
docstrings {
  forceBlankLineBefore = no
  oneline = keep
  style = SpaceAsterisk
  wrap = no
}
project {
  excludeFilters = [ ".metals" ]
}
fileOverride {
  "glob:**/*.sbt" {
    newlines {
      topLevelStatementBlankLines = [
        { blanks { afterAll = -1, }
          minBreaks = 0 } ]
    }

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }

  "glob:**/project/*.scala" {
    newlines {
      topLevelStatementBlankLines = [
        { blanks { afterAll = -1, }
          minBreaks = 0 } ]
    }

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }
}